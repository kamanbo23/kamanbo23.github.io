{"ast":null,"code":"import axios from 'axios';\n\n// Use environment variable for API URL with fallback to localhost\n// This will be set during production build\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Export the base URL for use in other modules\nexport const getApiUrl = () => API_URL;\n\n// Create reusable fetch function with authorization headers\nexport const fetchWithAuth = async (endpoint, options = {}) => {\n  const token = localStorage.getItem('token');\n  const headers = {\n    'Content-Type': 'application/json',\n    ...options.headers\n  };\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  const response = await fetch(`${API_URL}${endpoint}`, {\n    ...options,\n    headers\n  });\n  if (!response.ok) {\n    // Handle error responses\n    const error = await response.json().catch(() => ({\n      detail: 'An error occurred while fetching data'\n    }));\n    throw new Error(error.detail || 'An error occurred');\n  }\n  return response.json();\n};\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Add a request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Auth services\nexport const authService = {\n  login: async (username, password) => {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    return api.post('/token', formData);\n  },\n  register: async userData => {\n    return api.post('/users/', userData);\n  },\n  getCurrentUser: async () => {\n    return api.get('/users/me');\n  },\n  updateProfile: async profileData => {\n    return api.put('/users/me', profileData);\n  },\n  saveEvent: async eventId => {\n    return api.post(`/users/me/save-event/${eventId}`);\n  },\n  saveOpportunity: async opportunityId => {\n    return api.post(`/users/me/save-opportunity/${opportunityId}`);\n  }\n};\n\n// Events services\nexport const eventService = {\n  getEvents: async () => {\n    return api.get('/events/');\n  },\n  createEvent: async eventData => {\n    return api.post('/events/', eventData);\n  },\n  updateEvent: async (eventId, eventData) => {\n    return api.put(`/events/${eventId}`, eventData);\n  },\n  deleteEvent: async eventId => {\n    return api.delete(`/events/${eventId}`);\n  }\n};\n\n// Opportunities services\nexport const opportunityService = {\n  getOpportunities: async () => {\n    return api.get('/opportunities/');\n  },\n  createOpportunity: async opportunityData => {\n    return api.post('/opportunities/', opportunityData);\n  },\n  updateOpportunity: async (opportunityId, opportunityData) => {\n    return api.put(`/opportunities/${opportunityId}`, opportunityData);\n  },\n  deleteOpportunity: async opportunityId => {\n    return api.delete(`/opportunities/${opportunityId}`);\n  },\n  likeOpportunity: async opportunityId => {\n    return api.post(`/opportunities/${opportunityId}/like`);\n  },\n  applyForOpportunity: async opportunityId => {\n    return api.post(`/opportunities/${opportunityId}/apply`);\n  }\n};\nexport default {\n  auth: authService,\n  events: eventService,\n  opportunities: opportunityService\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getApiUrl","fetchWithAuth","endpoint","options","token","localStorage","getItem","headers","response","fetch","ok","error","json","catch","detail","Error","api","create","baseURL","interceptors","request","use","config","Promise","reject","authService","login","username","password","formData","FormData","append","post","register","userData","getCurrentUser","get","updateProfile","profileData","put","saveEvent","eventId","saveOpportunity","opportunityId","eventService","getEvents","createEvent","eventData","updateEvent","deleteEvent","delete","opportunityService","getOpportunities","createOpportunity","opportunityData","updateOpportunity","deleteOpportunity","likeOpportunity","applyForOpportunity","auth","events","opportunities"],"sources":["/Users/lokesh/indeedforresearch.real/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Use environment variable for API URL with fallback to localhost\n// This will be set during production build\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Export the base URL for use in other modules\nexport const getApiUrl = () => API_URL;\n\n// Create reusable fetch function with authorization headers\nexport const fetchWithAuth = async (endpoint, options = {}) => {\n  const token = localStorage.getItem('token');\n  \n  const headers = {\n    'Content-Type': 'application/json',\n    ...options.headers,\n  };\n  \n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  \n  const response = await fetch(`${API_URL}${endpoint}`, {\n    ...options,\n    headers,\n  });\n  \n  if (!response.ok) {\n    // Handle error responses\n    const error = await response.json().catch(() => ({\n      detail: 'An error occurred while fetching data'\n    }));\n    throw new Error(error.detail || 'An error occurred');\n  }\n  \n  return response.json();\n};\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n});\n\n// Add a request interceptor to include auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Auth services\nexport const authService = {\n  login: async (username, password) => {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    \n    return api.post('/token', formData);\n  },\n  \n  register: async (userData) => {\n    return api.post('/users/', userData);\n  },\n  \n  getCurrentUser: async () => {\n    return api.get('/users/me');\n  },\n  \n  updateProfile: async (profileData) => {\n    return api.put('/users/me', profileData);\n  },\n  \n  saveEvent: async (eventId) => {\n    return api.post(`/users/me/save-event/${eventId}`);\n  },\n  \n  saveOpportunity: async (opportunityId) => {\n    return api.post(`/users/me/save-opportunity/${opportunityId}`);\n  }\n};\n\n// Events services\nexport const eventService = {\n  getEvents: async () => {\n    return api.get('/events/');\n  },\n  \n  createEvent: async (eventData) => {\n    return api.post('/events/', eventData);\n  },\n  \n  updateEvent: async (eventId, eventData) => {\n    return api.put(`/events/${eventId}`, eventData);\n  },\n  \n  deleteEvent: async (eventId) => {\n    return api.delete(`/events/${eventId}`);\n  }\n};\n\n// Opportunities services\nexport const opportunityService = {\n  getOpportunities: async () => {\n    return api.get('/opportunities/');\n  },\n  \n  createOpportunity: async (opportunityData) => {\n    return api.post('/opportunities/', opportunityData);\n  },\n  \n  updateOpportunity: async (opportunityId, opportunityData) => {\n    return api.put(`/opportunities/${opportunityId}`, opportunityData);\n  },\n  \n  deleteOpportunity: async (opportunityId) => {\n    return api.delete(`/opportunities/${opportunityId}`);\n  },\n  \n  likeOpportunity: async (opportunityId) => {\n    return api.post(`/opportunities/${opportunityId}/like`);\n  },\n  \n  applyForOpportunity: async (opportunityId) => {\n    return api.post(`/opportunities/${opportunityId}/apply`);\n  }\n};\n\nexport default {\n  auth: authService,\n  events: eventService,\n  opportunities: opportunityService\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}