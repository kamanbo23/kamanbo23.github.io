{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[token,setToken]=useState(localStorage.getItem('token'));const[isAuthenticated,setIsAuthenticated]=useState(!!token);const[userType,setUserType]=useState(localStorage.getItem('userType')||null);const[userData,setUserData]=useState(JSON.parse(localStorage.getItem('userData'))||null);const[isLoading,setIsLoading]=useState(false);useEffect(()=>{if(token){localStorage.setItem('token',token);setIsAuthenticated(true);}else{localStorage.removeItem('token');localStorage.removeItem('userType');localStorage.removeItem('userData');setIsAuthenticated(false);setUserType(null);setUserData(null);}},[token]);useEffect(()=>{if(userType){localStorage.setItem('userType',userType);}},[userType]);useEffect(()=>{if(userData){localStorage.setItem('userData',JSON.stringify(userData));}},[userData]);// Load user profile when authenticated\nuseEffect(()=>{const fetchUserProfile=async()=>{if(isAuthenticated&&userType==='user'&&token){try{const response=await fetch('http://localhost:8000/users/me',{headers:{'Authorization':`Bearer ${token}`}});if(response.ok){const data=await response.json();setUserData(data);}}catch(error){console.error('Error fetching user profile:',error);}}};fetchUserProfile();},[isAuthenticated,userType,token]);const login=async(usernameOrEmail,password)=>{setIsLoading(true);try{const formData=new FormData();formData.append('username',usernameOrEmail);formData.append('password',password);const response=await fetch('http://localhost:8000/token',{method:'POST',body:formData});if(!response.ok){throw new Error('Login failed');}const data=await response.json();if(data.access_token){setToken(data.access_token);setUserType(data.user_type);// If user, fetch profile data\nif(data.user_type==='user'){const profileResponse=await fetch('http://localhost:8000/users/me',{headers:{'Authorization':`Bearer ${data.access_token}`}});if(profileResponse.ok){const profileData=await profileResponse.json();setUserData(profileData);}}else{// For admin, just store basic info\nsetUserData({username:data.username});}setIsAuthenticated(true);return true;}else{throw new Error('No access token received');}}catch(error){console.error('Login error:',error);setIsAuthenticated(false);setToken(null);setUserType(null);setUserData(null);throw error;}finally{setIsLoading(false);}};const register=async(email,username,password,fullName)=>{setIsLoading(true);try{const response=await fetch('http://localhost:8000/users/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,username,password,full_name:fullName})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.detail||'Registration failed');}const userData=await response.json();// Automatically log in after successful registration\nreturn await login(username,password);}catch(error){console.error('Registration error:',error);throw error;}finally{setIsLoading(false);}};const updateProfile=async updateData=>{if(!isAuthenticated||!token){throw new Error('Not authenticated');}try{const response=await fetch('http://localhost:8000/users/me',{method:'PUT',headers:{'Authorization':`Bearer ${token}`,'Content-Type':'application/json'},body:JSON.stringify(updateData)});if(!response.ok){const errorData=await response.json();throw new Error(errorData.detail||'Profile update failed');}const updatedUserData=await response.json();setUserData(updatedUserData);return updatedUserData;}catch(error){console.error('Profile update error:',error);throw error;}};const saveEvent=async eventId=>{if(!isAuthenticated||!token||userType!=='user'){throw new Error('Not authenticated as user');}try{const response=await fetch(`http://localhost:8000/users/me/save-event/${eventId}`,{method:'POST',headers:{'Authorization':`Bearer ${token}`}});if(!response.ok){throw new Error('Failed to save event');}// Refresh user data to get updated saved events\nconst profileResponse=await fetch('http://localhost:8000/users/me',{headers:{'Authorization':`Bearer ${token}`}});if(profileResponse.ok){const profileData=await profileResponse.json();setUserData(profileData);}return true;}catch(error){console.error('Save event error:',error);throw error;}};const saveOpportunity=async opportunityId=>{if(!isAuthenticated||!token||userType!=='user'){throw new Error('Not authenticated as user');}try{const response=await fetch(`http://localhost:8000/users/me/save-opportunity/${opportunityId}`,{method:'POST',headers:{'Authorization':`Bearer ${token}`}});if(!response.ok){throw new Error('Failed to save opportunity');}// Refresh user data to get updated saved opportunities\nconst profileResponse=await fetch('http://localhost:8000/users/me',{headers:{'Authorization':`Bearer ${token}`}});if(profileResponse.ok){const profileData=await profileResponse.json();setUserData(profileData);}return true;}catch(error){console.error('Save opportunity error:',error);throw error;}};const logout=()=>{setToken(null);setIsAuthenticated(false);setUserType(null);setUserData(null);};// Calculate isAdmin and isUser properties\nconst isAdmin=userType==='admin';const isUser=userType==='user';return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{token,isAuthenticated,userType,userData,isLoading,isAdmin,isUser,login,logout,register,updateProfile,saveEvent,saveOpportunity},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","userType","setUserType","userData","setUserData","JSON","parse","isLoading","setIsLoading","setItem","removeItem","stringify","fetchUserProfile","response","fetch","headers","ok","data","json","error","console","login","usernameOrEmail","password","formData","FormData","append","method","body","Error","access_token","user_type","profileResponse","profileData","username","register","email","fullName","full_name","errorData","detail","updateProfile","updateData","updatedUserData","saveEvent","eventId","saveOpportunity","opportunityId","logout","isAdmin","isUser","Provider","value","useAuth","context"],"sources":["/Users/lokesh/indeedforresearch.real/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isAuthenticated, setIsAuthenticated] = useState(!!token);\n  const [userType, setUserType] = useState(localStorage.getItem('userType') || null);\n  const [userData, setUserData] = useState(JSON.parse(localStorage.getItem('userData')) || null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('token', token);\n      setIsAuthenticated(true);\n    } else {\n      localStorage.removeItem('token');\n      localStorage.removeItem('userType');\n      localStorage.removeItem('userData');\n      setIsAuthenticated(false);\n      setUserType(null);\n      setUserData(null);\n    }\n  }, [token]);\n\n  useEffect(() => {\n    if (userType) {\n      localStorage.setItem('userType', userType);\n    }\n  }, [userType]);\n\n  useEffect(() => {\n    if (userData) {\n      localStorage.setItem('userData', JSON.stringify(userData));\n    }\n  }, [userData]);\n\n  // Load user profile when authenticated\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      if (isAuthenticated && userType === 'user' && token) {\n        try {\n          const response = await fetch('http://localhost:8000/users/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          \n          if (response.ok) {\n            const data = await response.json();\n            setUserData(data);\n          }\n        } catch (error) {\n          console.error('Error fetching user profile:', error);\n        }\n      }\n    };\n\n    fetchUserProfile();\n  }, [isAuthenticated, userType, token]);\n\n  const login = async (usernameOrEmail, password) => {\n    setIsLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('username', usernameOrEmail);\n      formData.append('password', password);\n\n      const response = await fetch('http://localhost:8000/token', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n\n      const data = await response.json();\n      if (data.access_token) {\n        setToken(data.access_token);\n        setUserType(data.user_type);\n        \n        // If user, fetch profile data\n        if (data.user_type === 'user') {\n          const profileResponse = await fetch('http://localhost:8000/users/me', {\n            headers: {\n              'Authorization': `Bearer ${data.access_token}`\n            }\n          });\n          \n          if (profileResponse.ok) {\n            const profileData = await profileResponse.json();\n            setUserData(profileData);\n          }\n        } else {\n          // For admin, just store basic info\n          setUserData({ username: data.username });\n        }\n        \n        setIsAuthenticated(true);\n        return true;\n      } else {\n        throw new Error('No access token received');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setIsAuthenticated(false);\n      setToken(null);\n      setUserType(null);\n      setUserData(null);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const register = async (email, username, password, fullName) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/users/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          username,\n          password,\n          full_name: fullName,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Registration failed');\n      }\n\n      const userData = await response.json();\n      \n      // Automatically log in after successful registration\n      return await login(username, password);\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateProfile = async (updateData) => {\n    if (!isAuthenticated || !token) {\n      throw new Error('Not authenticated');\n    }\n\n    try {\n      const response = await fetch('http://localhost:8000/users/me', {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updateData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Profile update failed');\n      }\n\n      const updatedUserData = await response.json();\n      setUserData(updatedUserData);\n      return updatedUserData;\n    } catch (error) {\n      console.error('Profile update error:', error);\n      throw error;\n    }\n  };\n\n  const saveEvent = async (eventId) => {\n    if (!isAuthenticated || !token || userType !== 'user') {\n      throw new Error('Not authenticated as user');\n    }\n\n    try {\n      const response = await fetch(`http://localhost:8000/users/me/save-event/${eventId}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save event');\n      }\n\n      // Refresh user data to get updated saved events\n      const profileResponse = await fetch('http://localhost:8000/users/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (profileResponse.ok) {\n        const profileData = await profileResponse.json();\n        setUserData(profileData);\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Save event error:', error);\n      throw error;\n    }\n  };\n\n  const saveOpportunity = async (opportunityId) => {\n    if (!isAuthenticated || !token || userType !== 'user') {\n      throw new Error('Not authenticated as user');\n    }\n\n    try {\n      const response = await fetch(`http://localhost:8000/users/me/save-opportunity/${opportunityId}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save opportunity');\n      }\n\n      // Refresh user data to get updated saved opportunities\n      const profileResponse = await fetch('http://localhost:8000/users/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (profileResponse.ok) {\n        const profileData = await profileResponse.json();\n        setUserData(profileData);\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Save opportunity error:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setToken(null);\n    setIsAuthenticated(false);\n    setUserType(null);\n    setUserData(null);\n  };\n\n  // Calculate isAdmin and isUser properties\n  const isAdmin = userType === 'admin';\n  const isUser = userType === 'user';\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        isAuthenticated,\n        userType,\n        userData,\n        isLoading,\n        isAdmin,\n        isUser,\n        login,\n        logout,\n        register,\n        updateProfile,\n        saveEvent,\n        saveOpportunity,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}