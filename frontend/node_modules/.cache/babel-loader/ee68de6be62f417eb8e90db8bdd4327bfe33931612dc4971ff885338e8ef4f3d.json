{"ast":null,"code":"var _jsxFileName = \"/Users/lokesh/indeedforresearch.real/frontend/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isAuthenticated, setIsAuthenticated] = useState(!!token);\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('token', token);\n      setIsAuthenticated(true);\n    } else {\n      localStorage.removeItem('token');\n      setIsAuthenticated(false);\n    }\n  }, [token]);\n  const login = async (username, password) => {\n    try {\n      const formData = new FormData();\n      formData.append('username', username);\n      formData.append('password', password);\n      const response = await fetch('http://localhost:8000/token', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const data = await response.json();\n      if (data.access_token) {\n        setToken(data.access_token);\n        setIsAuthenticated(true);\n        return true;\n      } else {\n        throw new Error('No access token received');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setIsAuthenticated(false);\n      setToken(null);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"nxmSoRU7/5/3htAB8AflWEI8sqw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","setItem","removeItem","login","username","password","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","access_token","error","console","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/lokesh/indeedforresearch.real/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isAuthenticated, setIsAuthenticated] = useState(!!token);\n\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('token', token);\n      setIsAuthenticated(true);\n    } else {\n      localStorage.removeItem('token');\n      setIsAuthenticated(false);\n    }\n  }, [token]);\n\n  const login = async (username, password) => {\n    try {\n      const formData = new FormData();\n      formData.append('username', username);\n      formData.append('password', password);\n\n      const response = await fetch('http://localhost:8000/token', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n\n      const data = await response.json();\n      if (data.access_token) {\n        setToken(data.access_token);\n        setIsAuthenticated(true);\n        return true;\n      } else {\n        throw new Error('No access token received');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setIsAuthenticated(false);\n      setToken(null);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setToken(null);\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, token }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}